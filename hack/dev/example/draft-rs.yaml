# secret
apiVersion: v1
data:
  password: VXJyZGZyd3gxU0xWWFIwSQ==
  user: cm9vdA==
kind: Secret
metadata:
  labels:
    kubedb.com/kind: MongoDB
    kubedb.com/name: mgo-rs
  name: mgo-rs-auth
  namespace: demo
type: Opaque
---
# keyfile
apiVersion: v1
data:
  key.txt: X2RCOGVTSERRV2h3Ym92UDR3LWl2T2VfVW40NHp5Mk9mMnNuN3gyRjROemxRZ1NDdFAzNjVtd2lEUHAzTjZDTjEwV29Tc2JNWDVNWWptemZDeHlQNzhtdEc0UlRTT3h4Z3F0QkQ1MHNrd3JSQVU0cFEtcnVQN3MtenNGRU1jRmx3X3BldU1VVFlZSTRESURyNEVUdVU4WUstMzRGUjN6Zzhaa2I2MkhsZ0dQNXc2bVNhS0dUcDVTVW9kVEpra2hfa2pCYVliU25Sd2J0WGlLQlZuWV9WbXV6eXVoNVFRWG1qTmRzQVZMNFhsNmhXajZLRjFUMXlaQnVuMDQyeDJ1YlhuM2NpX25mZl9LbjNCSmJjcThtaTFmczVvYmd6aGVpeUhSeE1PVFh5bnlEaFRaYlhCbjltcG04cWZBeHlUanZHcW9tYnlXY09lU2VibExQMGNCSzFyS3ZFQ0xvb2lObzFHLWJISnVFYkNTWmc3a0JqdFdUeUZ4MjdFMWFEN0ZEMlF2YTJ3cE9VQW1CZFFKc3V2SURGUXpQZmZJVGtYY01uN1cwdFc0UnZTSE52cEc2ZGhJNXZfWmJZTGlWMEJYallZVUg2QWJ3TlBIeWZ4WWxXLVhnWWhGM3I1eUI3eGhtd1dudGlfUk5CbmtpcUpSQzVkM1FJcklMRlFucjZiZ2pSclJDcDN6QloxV2kzb3hSUE5UcmpSNGNxRk9USXgtaWJHUjA3MWducW5CTS10U29KZ2x0T25Lcjl1dEQtdXhzYnV4dWNTd0xabDFXOUlPQU1pb2VxRWx2TVplWkM1dkpqTHU3WGxKN2pSX1JYMzZtODMzX2lXakgtWXppLXBlOURIaHc0a21ZcFB0ZGJvY3ROejVpWE5mU2R0eUZ2NDdOSnRMUzg1SndOM1A4Y1l2dFg5ZVFCZkZtN0RRcWxTemRobXdkd2FreDlGR0lWclhCR0FBWk9ibEhXSWJyMWxrZ3NRdWZLcWRrM1UtYlUxR3gxVWlq
kind: Secret
metadata:
  labels:
    kubedb.com/kind: MongoDB
    kubedb.com/name: mgo-rs
  name: mgo-rs-keyfile
  namespace: demo
type: Opaque
---
# configmap
apiVersion: v1
data:
  mongod.conf: "null"
kind: ConfigMap
metadata:
  labels:
    kubedb.com/kind: MongoDB
    kubedb.com/name: mgo-rs
  name: mgo-rs-conf
  namespace: demo

---
# governing service
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    kubedb.com/kind: MongoDB
    kubedb.com/name: mgo-rs
  name: mgo-rs-gvr-svc
  namespace: demo
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: db
    port: 27017
  selector:
    kubedb.com/kind: MongoDB
    kubedb.com/name: mgo-rs
  type: ClusterIP
---
# statefulset
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    kubedb.com/kind: MongoDB
    kubedb.com/name: mgo-rs
  name: mgo-rs
  namespace: demo
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      kubedb.com/kind: MongoDB
      kubedb.com/name: mgo-rs
  serviceName: mgo-rs-gvr-svc
  template:
    metadata:
      labels:
        kubedb.com/kind: MongoDB
        kubedb.com/name: mgo-rs
    spec:
      containers:
      - args:
        - --config=/data/configdb/mongod.conf
        - --dbpath=/data/db
        - --replSet=rs0
        - --port=27017
        - --bind_ip=0.0.0.0
        - --auth
        - --keyFile=/data/configdb/key.txt
        command:
        - mongod
        image: maruftuhin/mongo:3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: mongodb
        ports:
        - containerPort: 27017
          name: db
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /data/db
          name: datadir
        - mountPath: /data/configdb
          name: config
        - mountPath: /work-dir
          name: workdir
      initContainers:
      - args:
        - --work-dir=/work-dir
        image: maruftuhin/mongo-init
        imagePullPolicy: Always
        name: install
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /configdb-readonly
          name: configdir
        - mountPath: /data/configdb
          name: config
        - mountPath: /keydir-readonly
          name: keydir
      - args:
        - -c
        - "\n\t\t\tset -e\n           \tset -x\n \n           \tls -la /work-dir\n
          \          \tls -la /configdb-readonly\n           \tls -la /keydir-readonly\n
          \          \tls -la /data/configdb\n\t\t\tcat /work-dir/on-start.sh\n\t\t\t"
        command:
        - sh
        image: busybox
        imagePullPolicy: Always
        name: check
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /configdb-readonly
          name: configdir
        - mountPath: /data/configdb
          name: config
        - mountPath: /keydir-readonly
          name: keydir
      - args:
        - -on-start=/work-dir/on-start.sh
        - -service=mgo-rs-gvr-svc
        command:
        - /work-dir/peer-finder
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: REPLICA_SET
          value: rs0
        - name: AUTH
          value: "true"
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: user
              name: mgo-rs-auth
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mgo-rs-auth
        image: maruftuhin/mongo:3.6
        imagePullPolicy: Always
        name: bootstrap
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /data/configdb
          name: config
        - mountPath: /data/db
          name: datadir
      securityContext:
        fsGroup: 999
        runAsNonRoot: true
        runAsUser: 999
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: mgo-rs-conf
        name: configdir
      - emptyDir: {}
        name: workdir
      - emptyDir: {}
        name: config
      - name: keydir
        secret:
          defaultMode: 256
          secretName: mgo-rs-keyfile
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
